"""
Django settings for BillMate project.

Generated by 'django-admin startproject' using Django 5.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import os
from dotenv import load_dotenv

# Load environment variables from .env file
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('SECRET_KEY', 'django-insecure-djw0((!(2wodp%0y00ou(a$0vgtsex-l16%okho@k0)9t(yrx2')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'True') == 'True'

ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS', 'localhost,127.0.0.1').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',  # For human-readable template filters
    'invoice_app.apps.InvoiceAppConfig',
]

# Custom user model
AUTH_USER_MODEL = 'invoice_app.User'

# Session settings
SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Using database-backed sessions
SESSION_COOKIE_AGE = 1209600  # 2 weeks in seconds
SESSION_SAVE_EVERY_REQUEST = True  # Save the session to the database on every request
SESSION_COOKIE_HTTPONLY = True  # Helps prevent XSS attacks
SESSION_COOKIE_SECURE = not DEBUG  # Only send cookie over HTTPS in production

MIDDLEWARE = [
    'django.contrib.sessions.middleware.SessionMiddleware',  # Must come before messages
    'django.contrib.messages.middleware.MessageMiddleware',  # Moved to top
    'django.middleware.security.SecurityMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'invoice_app.middleware.EmailVerificationMiddleware',  # Our custom middleware
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'BillMate.urls'

import os

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BillMate.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / os.getenv('DB_NAME', 'db.sqlite3'),
        'USER': os.getenv('DB_USER', ''),
        'PASSWORD': os.getenv('DB_PASSWORD', ''),
        'HOST': os.getenv('DB_HOST', ''),
        'PORT': os.getenv('DB_PORT', ''),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Authentication settings
AUTHENTICATION_BACKENDS = [
    'invoice_app.backends.CustomAuthBackend',
    'django.contrib.auth.backends.ModelBackend',
]

# URL settings
LOGIN_URL = '/accounts/login/'  # Use absolute URL to avoid any URL resolution issues
# Authentication URLs
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'invoice_app:dashboard'
LOGOUT_REDIRECT_URL = 'login'

# Email settings
# Initialize email settings with defaults
EMAIL_HOST = os.getenv('EMAIL_HOST', 'smtp.gmail.com')
EMAIL_PORT = int(os.getenv('EMAIL_PORT', '587'))
EMAIL_USE_TLS = os.getenv('EMAIL_USE_TLS', 'True') == 'True'
EMAIL_HOST_USER = os.getenv('GMAIL_USER', '')
EMAIL_HOST_PASSWORD = os.getenv('GMAIL_APP_PASSWORD', '')

if DEBUG:
    # Use console backend in development
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
    print('\n' + '='*80)
    print('  EMAIL BACKEND: Using Console Backend (emails will be printed to console)')
    print('  To use SMTP in development, set DEBUG=False in your .env file')
    print('='*80 + '\n')
else:
    # Use SMTP backend in production
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    
    # Validate SMTP settings in production
    if not all([EMAIL_HOST_USER, EMAIL_HOST_PASSWORD]):
        raise ValueError(
            'GMAIL_USER and GMAIL_APP_PASSWORD must be set in production. '
            'Please update your .env file.'
        )

# Default from email (can be overridden in .env)
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL', EMAIL_HOST_USER or 'noreply@billmate.com')

# Messages framework settings
from django.contrib.messages import constants as messages

MESSAGE_TAGS = {
    messages.DEBUG: 'bg-blue-100 text-blue-800',
    messages.INFO: 'bg-blue-100 text-blue-800',
    messages.SUCCESS: 'bg-green-100 text-green-800',
    messages.WARNING: 'bg-yellow-100 text-yellow-800',
    messages.ERROR: 'bg-red-100 text-red-800',
}

MESSAGE_STORAGE = 'django.contrib.messages.storage.session.SessionStorage'
MESSAGE_LEVEL = messages.DEBUG  # Show all messages including debug

# Site URL for email verification links
SITE_URL = os.getenv('SITE_URL', 'http://localhost:8000')  # Used for generating absolute URLs

# Email verification settings
EMAIL_VERIFICATION_EXPIRE_DAYS = 7  # Number of days the verification link is valid

# Login settings
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'invoice_app:dashboard'
LOGOUT_REDIRECT_URL = 'login'

# Password reset settings
PASSWORD_RESET_TIMEOUT = 86400  # 24 hours in seconds
LOGOUT_REDIRECT_URL = 'invoice_app:home'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
